import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../../utils/trpc";


const Dashboard: NextPage = () => {
    const createGame = trpc.game.createGame.useMutation();

    const games = trpc.game.getAll.useQuery();

    const createGameHandler = async () => {
        await createGame.mutateAsync({
            name: "test",
            questions: [
                {
                    question: "test",
                    answers: [
                        {
                            answer: "test",
                            isCorrect: true,
                        },
                        {
                            answer: "test",
                            isCorrect: false,
                        }
                    ]
                },
            ],
        });
        games.refetch();
    };

    return (
        <>
            <Head>
                <title>Dashboard</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="w-full min-h-screen">
                <h1>Dashboard</h1>
                <div className="flex items-center justify-center">
                    {games.isLoading ? (
                        <p>Loading...</p>
                    ) : (
                        <ul>
                            {games.data?.games.map((game) => (
                                <li key={game.id}>
                                    <a>{game.name}</a>
                                </li>
                            ))}
                        </ul>
                    )}
                    <button
                        className="bg-slate-200 w-5/6 h-12 rounded-md content-center"
                        onClick={() => []}
                    >
                        Create a game</button>
                </div>

            </main>
        </>
    );
};

export default Dashboard;
